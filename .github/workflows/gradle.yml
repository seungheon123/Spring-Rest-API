# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  #pull_request:
    #branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DB_URL: ${{secrets.DB_URL}}
      DB_PASS: ${{secrets.DB_PASS}}
      DB_USERNAME: ${{secrets.DB_USERNAME}}

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew
    - name: Build with Gradle
      #uses: gradle/gradle-build-action@bd5760595778326ba7f1441bcf7e88b49de61a25 # v2.6.0
      #with:
        #arguments: build
      run: ./gradlew clean build --exclude-task test
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{secrets.DOCKERHUB_USERNAME}}
        password: ${{secrets.DOCKERHUB_TOKEN}}
    - name: Docker image build
      run: docker build -f Dockerfile -t ${{secrets.DOCKERHUB_USERNAME}}/spring-test:latest .
    - name: Push to Docker Hub
      run: docker push ${{secrets.DOCKERHUB_USERNAME}}/spring-test:latest